$date
	Wed Nov 04 20:12:25 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! out $end
$var reg 1 " clk $end
$var reg 1 # in $end
$var integer 32 $ i [31:0] $end
$scope module shRe $end
$var wire 1 " clk $end
$var wire 1 # in $end
$var wire 1 % f4_out_bar $end
$var wire 1 & f4_out $end
$var wire 1 ' f3_out_bar $end
$var wire 1 ( f3_out $end
$var wire 1 ) f2_out_bar $end
$var wire 1 * f2_out $end
$var wire 1 + f1_out_bar $end
$var wire 1 , f1_out $end
$var reg 1 - f1_in $end
$var reg 1 . f2_in $end
$var reg 1 / f3_in $end
$var reg 1 0 f4_in $end
$var reg 1 ! out $end
$scope module f1 $end
$var wire 1 - D $end
$var wire 1 " clk $end
$var reg 1 , Q $end
$var reg 1 + Qbar $end
$upscope $end
$scope module f2 $end
$var wire 1 . D $end
$var wire 1 " clk $end
$var reg 1 * Q $end
$var reg 1 ) Qbar $end
$upscope $end
$scope module f3 $end
$var wire 1 / D $end
$var wire 1 " clk $end
$var reg 1 ( Q $end
$var reg 1 ' Qbar $end
$upscope $end
$scope module f4 $end
$var wire 1 0 D $end
$var wire 1 " clk $end
$var reg 1 & Q $end
$var reg 1 % Qbar $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x0
x/
x.
1-
x,
x+
x*
x)
x(
x'
x&
x%
b0 $
1#
0"
x!
$end
#1
0+
1,
b1 $
1"
#2
1.
0-
b10 $
0"
0#
#3
0)
1*
1+
0,
b11 $
1"
#4
1/
0.
1-
b100 $
0"
1#
#5
1)
0*
0'
1(
0-
b101 $
1"
0#
#6
10
0/
1-
b110 $
0"
1#
#7
0%
1&
1'
0(
0+
1,
b111 $
1"
#8
1!
00
1.
0-
b1000 $
0"
0#
#9
1+
0,
0)
1*
1%
0&
b1001 $
1"
#10
0!
1/
0.
1-
b1010 $
0"
1#
#11
0'
1(
1)
0*
0+
1,
b1011 $
1"
#12
10
0/
1.
b1100 $
0"
#13
0)
1*
1'
0(
0%
1&
b1101 $
1"
#14
1!
00
1/
0-
b1110 $
0"
0#
#15
1%
0&
0'
1(
1+
0,
b1111 $
1"
#16
0!
10
0.
b10000 $
0"
#17
1)
0*
0%
1&
b10001 $
1"
#18
1!
0/
b10010 $
0"
#19
1'
0(
0+
1,
1-
b10011 $
1"
1#
#20
00
1.
0-
b10100 $
0"
0#
#21
0)
1*
1%
0&
1-
b10101 $
1"
1#
#22
0!
1/
b10110 $
0"
#23
0'
1(
1+
0,
0-
b10111 $
1"
0#
#24
10
0.
b11000 $
0"
